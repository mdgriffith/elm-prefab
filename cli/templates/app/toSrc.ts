
import * as path from "path";
import * as fs from "fs";
import * as Options from "../../options";


export const Main = {
   moduleName: "Main",
   path: "/Main.elm",
   contents: "module Main exposing (main)\n\n{-| -}\n\nimport App\nimport App.Page.Id\nimport App.Resources\nimport App.View\nimport App.View.Id\nimport Browser\nimport Effect exposing (Effect)\nimport Effect.Nav\nimport Effect.Page\nimport Effect.Scroll\nimport Html\nimport Html.Attributes as Attr\nimport Listen\nimport Theme\nimport Theme.Color\nimport Ui.Nav\nimport Url\n\n\ntype alias Model =\n    {}\n\n\n{-| -}\nmain : App.App Model Msg\nmain =\n    App.app\n        { init =\n            \\resources flags url ->\n                ( {}\n                , Effect.batch\n                    [ Effect.Nav.toUrl url\n                    , Effect.Page.loadAt App.View.Id.Detail (App.Page.Id.Reference {})\n                    ]\n                )\n        , onUrlChange = UrlChanged\n        , onUrlRequest = UrlRequested\n        , update = update\n        , subscriptions =\n            \\resources model ->\n                Listen.none\n        , toCmd = toCmd\n        , toSub = toSub\n        , view =\n            \\resources toAppMsg model regions ->\n                case regions.primary of\n                    Nothing ->\n                        { title = \"Nothing\"\n                        , body = [ Html.text \"\" ]\n                        }\n\n                    Just (App.Loading _) ->\n                        { title = \"Loading\"\n                        , body = [ Html.text \"Loading\" ]\n                        }\n\n                    Just App.NotFound ->\n                        --\n                        { title = \"Not found\"\n                        , body = [ Html.text \"Not found\" ]\n                        }\n\n                    Just (App.Error error) ->\n                        -- error is a type you control that lives at App.Page.Error\n                        { title = \"Not found\"\n                        , body = [ Html.text \"Not found\" ]\n                        }\n\n                    Just (App.View page) ->\n                        view resources toAppMsg model regions page\n        }\n\n\ntoSub : App.Resources.Resources -> App.SubOptions Msg -> Model -> Listen.Listen (App.Msg Msg) -> Sub (App.Msg Msg)\ntoSub resources options model sub =\n    Listen.toSubscription options sub\n\n\ntoCmd : App.Resources.Resources -> App.CmdOptions Msg -> Model -> Effect.Effect (App.Msg Msg) -> Cmd (App.Msg Msg)\ntoCmd resources options model effect =\n    Effect.toCmd options\n        (\\urlBase ->\n            case urlBase of\n                Effect.UrlApi ->\n                    { headers = []\n                    , urlBase = \"\"\n                    }\n\n                Effect.UrlStaticFile ->\n                    { headers = []\n                    , urlBase = \"\"\n                    }\n\n                Effect.UrlCustom base ->\n                    { headers = []\n                    , urlBase = base\n                    }\n        )\n        effect\n\n\nheightWindow =\n    Attr.style \"height\" \"100vh\"\n\n\nview resources toAppMsg model regions innerView =\n    { title = innerView.title\n    , body =\n        [ stylesheet\n        , Html.div\n            [ Theme.Color.backgroundDefault\n            , Theme.Color.textDefault\n            , Theme.setMode Theme.Default\n            ]\n            [ Theme.row.zero []\n                [ Ui.Nav.view {}\n                , innerView.body\n                , viewDetails regions.detail\n                ]\n            ]\n        ]\n    }\n\n\nviewDetails details =\n    case details of\n        Nothing ->\n            Html.text \"\"\n\n        Just (App.Loading _) ->\n            Html.text \"\"\n\n        Just App.NotFound ->\n            Html.text \"\"\n\n        Just (App.Error error) ->\n            Html.text \"\"\n\n        Just (App.View page) ->\n            Html.div\n                [ Attr.style \"position\" \"fixed\"\n                , Attr.style \"top\" \"0\"\n                , Attr.style \"bottom\" \"0\"\n                , Attr.style \"right\" \"0\"\n                , Attr.style \"width\" \"500px\"\n                , Attr.style \"overflow\" \"auto\"\n                ]\n                [ page.body ]\n\n\nstylesheet =\n    Html.node \"style\"\n        []\n        [ Html.text \"\"\"\nhtml, head, body {\n  background-color: white;\n  margin: 0;\n}\n\n@media (prefers-color-scheme: dark) {\n  html {\n    background-color: var(--grey5);\n  }\n}\n\nimg {\n  max-width: 100%;\n}\n\nbody {\n  font-family: 'Source Sans Pro', 'Trebuchet MS', 'Lucida Grande', 'Bitstream Vera Sans', 'Helvetica Neue', sans-serif;\n  color: #000E16;\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n}\n\nh1, h2, h3, h4 {\n  font-weight: normal;\n  margin:0;\n}\n\np, li {\n  line-height: 1.5em;\n}\n\na { color: #1293D8; text-decoration: none; }\na:hover { text-decoration: underline; }\na .light { color: #5FABDC; }\n\npre {\n  margin: 0;\n  padding: 10px;\n  background-color: rgb(254,254,254);\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(245,245,245);\n  border-radius: 6px;\n  overflow-x: auto;\n}\n\n\n\n/* HOME */\n\n.home-summaries ul {\n  list-style-type: none;\n  padding-left: 1em;\n}\n\n\n\n/* CENTER */\n\n.center {\n  width: 920px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n\n\n/* HEADER */\n\n.header {\n  background-color: #5FABDC;\n  width: calc(100% - 40px);\n  padding-left: 20px;\n  padding-right: 20px;\n  overflow-x: hidden;\n}\n\n.nav {\n  max-width: 920px;\n  height: 64px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n}\n\n.nav { color: white; }\n.nav a { color: white; }\n.nav h1 { font-size: 24px; }\n.spacey-char { margin: 0 10px; }\n\n.header-underbar {\n  background-color: #f2e19e;\n  margin: 0;\n}\n\n.version-warning {\n  margin: 0 0 0 calc((100% - 920px) / 2);\n  padding: 7px 0;\n  color: #750707;\n}\n\n.version-warning a {\n  color: #750707;\n  text-decoration: underline;\n}\n\n\n\n/* FOOTER */\n\n\n.footer {\n  text-align: center;\n  margin-top: 4em;\n  border-top: 1px solid #eeeeee;\n  padding: 2em 0;\n  color: #bbbbbb;\n}\n\n\n.grey-link {\n  color: #bbbbbb;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.grey-link:hover {\n  color: #bbbbbb;\n}\n\n\n/* DOCUMENTATION */\n\n\n.block-list {\n  width: 600px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.block-list-title {\n  font-size: 3em;\n  margin-bottom: 16px;\n}\n\n.markdown-block h1 {\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n}\n\n.docs-block {\n  border-top: 1px solid #eeeeee;\n  margin-top: 1em;\n  margin-bottom: 2em;\n}\n\n\n.docs-header {\n  white-space: pre;\n  font-family: 'Source Code Pro', Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n\n.docs-comment {\n  overflow: hidden;\n  padding-left: 36px;\n}\n\n.docs-comment img {\n  max-width: 500px;\n}\n\n\n\n/* ABOUT */\n\n\n.pkg-about table {\n  font-family: 'Source Code Pro', Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  width: 100%;\n}\n\n.pkg-about td {\n  padding: 4px 0;\n}\n\n\n\n/* PACKAGE NAVIGATION */\n\n\n.pkg-nav {\n  width: 200px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 20px;\n  margin: 20px 20px 20px 40px;\n  border-left: 1px solid #eeeeee;\n}\n\n.pkg-nav h2 {\n  margin-bottom: 0;\n}\n\n.pkg-nav input {\n  width: 200px;\n  font-size: 1em;\n  padding: 4px;\n  margin: 10px 0;\n  border: 1px solid #eeeeee;\n  border-radius: 6px;\n}\n\n.pkg-nav ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n.pkg-nav ul ul {\n  list-style-type: none;\n  margin: 0;\n  padding-left: 20px;\n}\n\n.pkg-nav-module {\n  font-family: 'Source Code Pro', Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  text-overflow: ellipsis;\n}\n\n.pkg-nav-value {\n  font-family: 'Source Code Pro', Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  text-overflow: ellipsis;\n}\n\n.pkg-nav-search-chunk {\n  padding-bottom: 10px;\n}\n\n\n\n/* CATALOG */\n\n\n.catalog {\n  width: 600px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n\n.catalog input {\n  width: 578px;\n  font-size: 1.5em;\n  padding: 10px;\n  outline: none;\n  border: 1px solid #eeeeee;\n  border-radius: 8px;\n  margin-top: 40px;\n  margin-bottom: 10px;\n}\n\n\n.pkg-hint {\n  padding: 20px;\n  background-color: #fcfcfc;\n  border-radius: 8px;\n}\n\n.pkg-summary {\n  padding: 20px 0;\n  border-bottom: 1px solid #eeeeee;\n}\n\n.pkg-summary h1 {\n  margin: 0;\n  font-size: 1.5em;\n  display: inline-block;\n}\n\n.pkg-summary-desc {\n  margin: 0.5em 0;\n}\n\n.pkg-summary-hints {\n  float: right;\n  font-size: 1em;\n  padding-top: 0.5em;\n  color: #bbbbbb;\n}\n\n.pkg-summary-hints a {\n  color: #bbbbbb;\n}\n\n\n\n/* CATALOG SIDEBAR */\n\n\n.catalog-sidebar {\n  width: 200px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 20px;\n  margin: 20px 20px 20px 40px;\n  border-left: 1px solid #eeeeee;\n}\n\n.catalog-sidebar h2 {\n  font-size: 1.5em;\n  padding: 10px;\n  margin: 0;\n}\n\n.catalog-sidebar ul {\n  list-style-type: none;\n  margin: 0;\n  padding-left: 20px;\n  padding-bottom: 10px;\n}\n\n\n\n/* CODE */\n\n\ncode {\n  font-family: 'Source Code Pro', Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n}\n\n/* I heard using :not() is slow for reflows.\nNot really any of those on the website though AFAIK.\n*/\n:not(pre) > code {\n  padding: 0;\n  padding-top: 0.2em;\n  padding-bottom: 0.2em;\n  margin: 0;\n  font-size: 85%;\n  background-color: rgba(0,0,0,0.04);\n  border-radius: 3px;\n}\n\n:not(pre) > code::before, :not(pre) > code::after {\n  letter-spacing: -0.2em;\n  content: \"\\\\00a0\";\n}\n\n.column {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  box-sizing: border-box;\n}\n\n\n.ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n\n\n\"\"\"\n        ]\n\n\ntype Msg\n    = UrlChanged Url.Url\n    | UrlRequested Browser.UrlRequest\n\n\nupdate : App.Resources.Resources -> Msg -> Model -> ( Model, Effect Msg )\nupdate resources msg model =\n    case msg of\n        UrlRequested (Browser.Internal url) ->\n            ( model, Effect.Nav.pushUrl (Url.toString url) )\n\n        UrlRequested (Browser.External urlStr) ->\n            ( model, Effect.Nav.load urlStr )\n\n        UrlChanged url ->\n            ( model\n            , Effect.batch\n                [ Effect.Nav.toUrl url\n                , Effect.Scroll.resetWindow\n                ]\n            )\n"
}

export const all = [
  Main
]

export const copyTo = (baseDir: string, overwrite: boolean, skip: boolean, summary: Options.Summary) => {
   for (const file of all) {
      if (overwrite || (!fs.existsSync(path.join(baseDir, file.path)) && !skip)) {
        const filepath = path.join(baseDir, file.path);
        fs.mkdirSync(path.dirname(filepath), { recursive: true });
        fs.writeFileSync(filepath, file.contents);
        const generated = { outputDir: baseDir, path: filepath}
        Options.addGenerated(summary, generated);
      }
   }
}
